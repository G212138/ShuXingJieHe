{"version":3,"sources":["assets\\game\\scripts\\UI\\Item\\QiepianPanel.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { SyncDataManager } from \"../../../../frame/scripts/Manager/SyncDataManager\";\nimport Block from \"./Block\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class QiepianPanel extends cc.Component {\n\n    @property(cc.Label)\n    private label: cc.Label = null;\n    @property(cc.Prefab)\n    private block_prefab: cc.Prefab = null;\n    @property(cc.Node)\n    private blockPanel: cc.Node = null;\n\n    private _yIndex: number = 0;\n    \n    public init(cengIndenx: number) {\n        this.label.string = \"å±‚\" + (cengIndenx + 1);   \n        this._yIndex = SyncDataManager.getSyncData().customSyncData.yCount - cengIndenx - 1;     \n        this.initBlock();        \n    }\n\n    private initBlock() {\n        this.blockPanel.removeAllChildren();\n        this.blockPanel.destroyAllChildren();\n        let xCount = SyncDataManager.getSyncData().customSyncData.xCount;\n        let zCount = SyncDataManager.getSyncData().customSyncData.zCount;\n        let maxWidth = 6 * 40 + (6 - 1) * 2;        \n        let blockPanelWidth = xCount * 40 + (xCount - 1) * 2;\n        this.blockPanel.width = blockPanelWidth;\n        \n        for(let i = 0; i < xCount; i++) {\n            for(let j = 0; j < zCount; j++) {\n                let block = cc.instantiate(this.block_prefab);\n                block.name = xCount - 1 - i + \"_\" + j + \"_\" + this._yIndex;\n                block.parent = this.blockPanel;\n                block.getComponent(Block).init(xCount - 1 - i, j, this._yIndex);\n            }\n        }\n        \n        this.blockPanel.getComponent(cc.Layout).updateLayout();\n        let scale = 1;\n        if (this.blockPanel.width > this.blockPanel.height) {\n            scale = maxWidth / this.blockPanel.width;\n        } else {\n            scale = maxWidth / this.blockPanel.height;\n        }\n        console.log(\"scale\", scale);\n        this.blockPanel.scale = scale;\n    }\n\n    public onHandleClickCube(data: {xIndex: number, yIndex: number, zIndex: number}) {\n        // for(let i = 0; i < this.blockPanel.childrenCount; i++) {\n        //     this.blockPanel.children[i].getComponent(Block).onHandleClickCube(data);\n        // }\n    }\n\n    public resetBlock() {\n        for(let i = 0; i < this.blockPanel.childrenCount; i++) {\n            this.blockPanel.children[i].getComponent(Block).reset();\n        }\n    }\n}\n"]}