{"version":3,"sources":["assets\\frame\\scripts\\UI\\Panel\\BaseGamePanel.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uEAAsE;AACtE,gFAA+E;AAC/E,wDAAuD;AACvD,8CAA6C;AAC7C,iEAAgE;AAChE,6DAA4D;AAC5D,2DAA0D;AAC1D,iEAA0E;AAC1E,qDAAoD;AACpD,6CAAwC;AACxC,qCAAoC;AACpC,6CAA4C;AAC5C,oCAAmC;AAE7B,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAA2C,iCAAM;IAAjD;QAAA,qEAkKC;QAhKW,mBAAa,GAAY,KAAK,CAAC;;IAgK3C,CAAC;IA9JG,eAAe;IAEf,6BAAK,GAAL;QACI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACtD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACrC;QAED,cAAc;QACd,iBAAO,CAAC,SAAS,EAAE,CAAC;QACpB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,iBAAO,CAAC,MAAM,IAAI,CAAC,iBAAO,CAAC,QAAQ,EAAE;YACrC,eAAM,CAAC,eAAe,EAAE,CAAC;SAC5B;QACD,iCAAe,CAAC,QAAQ,CAAC,2BAAY,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC;QAEpE,IAAI,uBAAU,CAAC,UAAU,EAAE;YACvB,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,eAAM,CAAC,wBAAwB,EAAE,CAAC;SACrC;aAAM;YACH,IAAI,CAAC,MAAM,EAAE,CAAC;SACjB;IACL,CAAC;IAED,iCAAS,GAAT;QACI,iBAAM,SAAS,WAAE,CAAC;QAClB,eAAM,CAAC,SAAS,EAAE,CAAC;IACvB,CAAC;IAEO,kCAAU,GAAlB;QACI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,qBAAS,CAAC,aAAa,EAAE;YACzB,IAAI,CAAC,QAAQ,EAAE,CAAC;SACnB;aAAM;YACH,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;SACnB;IACL,CAAC;IAES,gCAAQ,GAAlB;QACI,SAAG,CAAC,IAAI,EAAE,CAAC;QACX,iCAAe,CAAC,YAAY,EAAE,CAAC;QAC/B,6BAAa,CAAC,cAAc,CAAC,6BAAa,CAAC,aAAa,EAAE,CAAC,CAAC;QAC5D,IAAI,CAAC,iBAAO,CAAC,MAAM,IAAI,iBAAO,CAAC,QAAQ,EAAE;YACrC,eAAM,CAAC,gBAAgB,EAAE,CAAC;SAC7B;QAED,IAAI,6BAAa,CAAC,UAAU,CAAC,WAAW,EAAE;YACtC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;SACjD;aAAM;YACH,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;SAClD;IACL,CAAC;IAES,sCAAc,GAAxB,UAAyB,QAAkB;QACvC,iCAAe,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QACtC,IAAI,iCAAe,CAAC,QAAQ,CAAC,aAAa,CAAC,UAAU,EAAE;YACnD,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC5B;aAAM;YACH,eAAM,CAAC,aAAa,EAAE,CAAC;YACvB,eAAM,CAAC,cAAc,EAAE,CAAC;SAC3B;IACL,CAAC;IAES,mCAAW,GAArB,UAAsB,gBAAyB;QAC3C,6BAAa,CAAC,iBAAiB,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;IAC5D,CAAC;IAES,mCAAW,GAArB,UAAsB,gBAAiC;QAAjC,iCAAA,EAAA,wBAAiC;QACnD,6BAAa,CAAC,iBAAiB,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAC;IAC7D,CAAC;IAES,gCAAQ,GAAlB;QACI,iCAAe,CAAC,QAAQ,CAAC,aAAa,CAAC,UAAU,GAAG,IAAI,CAAC;QACzD,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC7B,CAAC;IAES,yCAAiB,GAA3B;QACI,eAAM,CAAC,QAAQ,EAAE,CAAC;QAClB,2BAAY,CAAC,OAAO,EAAE,CAAC;QACvB,IAAI,YAAY,GACZ,6BAAa,CAAC,UAAU,CAAC,QAAQ;YACjC,iCAAe,CAAC,QAAQ,CAAC,aAAa,CAAC,cAAc,GAAG,6BAAa,CAAC,UAAU,CAAC,WAAW,CAAC;QACjG,IAAI,6BAAa,CAAC,UAAU,CAAC,WAAW,EAAE;YACtC,eAAM,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;SACtC;aAAM;YACH,IAAI,GAAG,GAAG,CAAC,KAAK,6BAAa,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;YAChE,eAAM,CAAC,YAAY,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,YAAY,CAAC,CAAC;SACvD;IACL,CAAC;IAEO,kCAAU,GAAlB;QACI,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YACjB,IAAI,CAAC,QAAQ,EAAE,CAAC;SACnB;IACL,CAAC;IAES,gCAAQ,GAAlB;QACI,eAAM,CAAC,aAAa,EAAE,CAAC;QACvB,eAAM,CAAC,cAAc,EAAE,CAAC;QAExB,iCAAe,CAAC,MAAM,EAAE,CAAC;QACzB,6BAAa,CAAC,UAAU,EAAE,CAAC;IAC/B,CAAC;IAEO,2CAAmB,GAA3B;QACI,MAAM;QACN,iBAAO,CAAC,QAAQ,CAAC,2BAAY,CAAC,IAAI,EAAE,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC1E,MAAM;QACN,iCAAe,CAAC,EAAE,CAAC,2BAAY,CAAC,gBAAgB,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;QAE7E,SAAG,CAAC,oBAAoB,CAAC,2BAAY,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAE9E,aAAa;QACb,iCAAe,CAAC,EAAE,CAAC,2BAAY,CAAC,iBAAiB,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;IACzF,CAAC;IAEO,8BAAM,GAAd;QAAA,iBA4BC;QA3BG,iBAAO,CAAC,WAAW,CACf,iBAAO,CAAC,YAAY,GAAG,iBAAiB,GAAG,iBAAO,CAAC,YAAY,EAC/D,KAAK,EACL,gCAAgC,EAChC,UAAC,GAAG,EAAE,QAAQ;YACV,IAAI,CAAC,GAAG,EAAE;gBACN,IAAI,aAAa,GAAG,QAAQ,CAAC;gBAC7B,IAAI,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;oBACnC,OAAO;iBACV;gBACD,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBAChE,IAAI,OAAO,IAAI,IAAI,EAAE;oBACjB,IAAI,OAAO,CAAC,aAAa,IAAI,uBAAU,CAAC,aAAa,EAAE;wBACnD,6BAAa,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;wBACpC,KAAI,CAAC,UAAU,EAAE,CAAC;qBACrB;yBAAM;wBACH,kBAAkB;wBAClB,iBAAO,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC;wBACxC,eAAM,CAAC,cAAc,CAAC,wBAAwB,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;wBAC9D,OAAO;qBACV;iBACJ;aACJ;iBAAM;aACN;QACL,CAAC,EACD,IAAI,CACP,CAAC;IACN,CAAC;IAED,WAAW;IACH,4CAAoB,GAA5B;QACI,iCAAiC;QACjC,iBAAO,CAAC,QAAQ,EAAE,CAAC;QACnB,OAAO;QACP,6BAAa,CAAC,cAAc,EAAE,CAAC;QAC/B,iBAAO,CAAC,QAAQ,EAAE,CAAC;IACvB,CAAC;IAED,8BAAM,GAAN,UAAO,EAAE;QACL,SAAG,CAAC,MAAM,EAAE,CAAC;IACjB,CAAC;IAhKa,uBAAS,GAAG,eAAe,CAAC;IADzB,aAAa;QADjC,OAAO;OACa,aAAa,CAkKjC;IAAD,oBAAC;CAlKD,AAkKC,CAlK0C,eAAM,GAkKhD;kBAlKoB,aAAa","file":"","sourceRoot":"/","sourcesContent":["import { ConstValue } from '../../../../game/scripts/Data/ConstValue';\r\nimport { EditorManager } from '../../../../game/scripts/Manager/EditorManager';\r\nimport { FrameMsgType } from '../../Data/FrameMsgType';\r\nimport { NetWork } from '../../Http/NetWork';\r\nimport { ListenerManager } from '../../Manager/ListenerManager';\r\nimport { ReportManager } from '../../Manager/ReportManager';\r\nimport { SoundManager } from '../../Manager/SoundManager';\r\nimport { SyncData, SyncDataManager } from '../../Manager/SyncDataManager';\r\nimport { UIManager } from '../../Manager/UIManager';\r\nimport GameMsg from '../../SDK/GameMsg';\r\nimport { T2M } from '../../SDK/T2M';\r\nimport { UIHelp } from '../../Utils/UIHelp';\r\nimport { BaseUI } from '../BaseUI';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class BaseGamePanel extends BaseUI {\r\n    public static className = 'BaseGamePanel';\r\n    private _isPanelReady: boolean = false;\r\n\r\n    // onLoad () {}\r\n\r\n    start() {\r\n        if (this.data && this.data.node && this.data.node.parent) {\r\n            this.data.node.removeFromParent();\r\n        }\r\n\r\n        // 发送GameStart\r\n        GameMsg.gameStart();\r\n        this.addSDKEventListener();\r\n        if (NetWork.isSync && !NetWork.isMaster) {\r\n            UIHelp.showRecoverMask();\r\n        }\r\n        ListenerManager.dispatch(FrameMsgType.TEACHER_PANEL_LOADING, false);\r\n\r\n        if (ConstValue.IS_TEACHER) {\r\n            this.panelReady();\r\n            UIHelp.showUploadAndReturnPanel();\r\n        } else {\r\n            this.getNet();\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        super.onDestroy();\r\n        UIHelp.closeMask();\r\n    }\r\n\r\n    private panelReady() {\r\n        this._isPanelReady = true;\r\n        if (UIManager.isGameShowing) {\r\n            this.setPanel();\r\n        } else {\r\n            cc.game.pause();\r\n        }\r\n    }\r\n\r\n    protected setPanel() {\r\n        T2M.init();\r\n        SyncDataManager.initSyncData();\r\n        ReportManager.initReportData(EditorManager.getLevelCount());\r\n        if (!NetWork.isSync || NetWork.isMaster) {\r\n            UIHelp.closeRecoverMask();\r\n        }\r\n\r\n        if (EditorManager.editorData.isStarCount) {\r\n            cc.resources.load('prefab/ui/panel/OverTips');\r\n        } else {\r\n            cc.resources.load('prefab/ui/panel/StarCount');\r\n        }\r\n    }\r\n\r\n    protected onRecoveryData(recovery: SyncData) {\r\n        SyncDataManager.setSyncData(recovery);\r\n        if (SyncDataManager.syncData.frameSyncData.isGameOver) {\r\n            this.showGameOverPanel();\r\n        } else {\r\n            UIHelp.closeOverTips();\r\n            UIHelp.closeStarCount();\r\n        }\r\n    }\r\n\r\n    protected answerRight(isCurLevelFinish: boolean) {\r\n        ReportManager.reportLevelResult(true, isCurLevelFinish);\r\n    }\r\n\r\n    protected answerWrong(isCurLevelFinish: boolean = false) {\r\n        ReportManager.reportLevelResult(false, isCurLevelFinish);\r\n    }\r\n\r\n    protected gameOver() {\r\n        SyncDataManager.syncData.frameSyncData.isGameOver = true;\r\n        this.showGameOverPanel();\r\n    }\r\n\r\n    protected showGameOverPanel() {\r\n        UIHelp.showMask();\r\n        SoundManager.stopAll();\r\n        let isShowReplay: boolean =\r\n            EditorManager.editorData.isReplay &&\r\n            SyncDataManager.syncData.frameSyncData.hasReplayCount < EditorManager.editorData.replayCount;\r\n        if (EditorManager.editorData.isStarCount) {\r\n            UIHelp.showStarCount(isShowReplay);\r\n        } else {\r\n            let str = 1 === EditorManager.getLevelCount() ? '挑战成功' : '闯关成功';\r\n            UIHelp.showOverTips(2, '', null, str, isShowReplay);\r\n        }\r\n    }\r\n\r\n    private onGameShow() {\r\n        if (this._isPanelReady) {\r\n            cc.game.resume();\r\n            this.setPanel();\r\n        }\r\n    }\r\n\r\n    protected onReplay() {\r\n        UIHelp.closeOverTips();\r\n        UIHelp.closeStarCount();\r\n\r\n        SyncDataManager.replay();\r\n        ReportManager.replayGame();\r\n    }\r\n\r\n    private addSDKEventListener() {\r\n        // 小组课\r\n        GameMsg.addEvent(FrameMsgType.STOP, this.onSDKMsgStopReceived.bind(this));\r\n        // 小班课\r\n        ListenerManager.on(FrameMsgType.ON_RECOVERY_DATA, this.onRecoveryData, this);\r\n\r\n        T2M.addSyncEventListener(FrameMsgType.REPLAY_START, this.onReplay.bind(this));\r\n\r\n        // 预加载：监听窗口打开\r\n        ListenerManager.on(FrameMsgType.PRELOAD_GAME_SHOW, this.onGameShow.bind(this), this);\r\n    }\r\n\r\n    private getNet() {\r\n        NetWork.httpRequest(\r\n            NetWork.GET_QUESTION + '?courseware_id=' + NetWork.coursewareId,\r\n            'GET',\r\n            'application/json;charset=utf-8',\r\n            (err, response) => {\r\n                if (!err) {\r\n                    let response_data = response;\r\n                    if (Array.isArray(response_data.data)) {\r\n                        return;\r\n                    }\r\n                    let content = JSON.parse(response_data.data.courseware_content);\r\n                    if (content != null) {\r\n                        if (content.CoursewareKey == ConstValue.CoursewareKey) {\r\n                            EditorManager.setData(content.data);\r\n                            this.panelReady();\r\n                        } else {\r\n                            // coursewareKey错误\r\n                            GameMsg.differntKey('CoursewareKey错误！');\r\n                            UIHelp.showErrorPanel('CoursewareKey错误,请联系客服！', '', '', '确定');\r\n                            return;\r\n                        }\r\n                    }\r\n                } else {\r\n                }\r\n            },\r\n            null,\r\n        );\r\n    }\r\n\r\n    // 游戏结束消息监听\r\n    private onSDKMsgStopReceived() {\r\n        //各游戏独立处理  先上报当前作答数据  后发送finish消息\r\n        GameMsg.gameStop();\r\n        //新课堂上报\r\n        ReportManager.reportGameOver();\r\n        GameMsg.finished();\r\n    }\r\n\r\n    update(dt) {\r\n        T2M.update();\r\n    }\r\n}\r\n"]}