{"version":3,"sources":["assets\\game\\scripts\\UI\\Item\\ThreeDNode.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { ListenerManager } from \"../../../../frame/scripts/Manager/ListenerManager\";\nimport { SyncDataManager } from \"../../../../frame/scripts/Manager/SyncDataManager\";\nimport { EventType } from \"../../Data/EventType\";\nimport Cube from \"./Cube\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class ThreeNode extends cc.Component {\n    @property(cc.Prefab)\n    private cubePrefab: cc.Prefab = null;\n    @property(cc.Node)\n    private cubeRootNode: cc.Node = null;\n\n    private touchEventId: number;\n\n    onLoad() {\n        ListenerManager.on(EventType.CUBE_OPEN, this.onCubeOpen, this);\n        ListenerManager.on(EventType.CLICK_CUBE, this.onClickCube, this);\n    }\n\n    onDestroy() {\n        ListenerManager.off(EventType.CUBE_OPEN, this.onCubeOpen, this);\n        ListenerManager.off(EventType.CLICK_CUBE, this.onClickCube, this)\n    }\n\n    public init() {\n        this.initBigCube();\n        this.onCubeOpen(SyncDataManager.getSyncData().customSyncData.cubeOpened);\n        for (let i = 0; i < SyncDataManager.getSyncData().customSyncData.cubeClickArr.length; i++) {\n            this.onClickCube(SyncDataManager.getSyncData().customSyncData.cubeClickArr[i]);\n        }\n    }\n\n    public reset() {\n        let quat = new cc.Quat()\n        cc.Quat.fromEuler(quat, 0, 45, 0)\n        this.cubeRootNode.setRotation(quat);\n        this.initBigCube();\n        SyncDataManager.getSyncData().customSyncData.cubeClickArr = [];\n        SyncDataManager.getSyncData().customSyncData.cubeOpened = false;\n        SyncDataManager.getSyncData().customSyncData.qiepianClickArr = [];\n    }\n\n    //初始化大正方体\n    private initBigCube() {\n        let xCount = SyncDataManager.getSyncData().customSyncData.xCount;\n        let yCount = SyncDataManager.getSyncData().customSyncData.yCount;\n        let zCount = SyncDataManager.getSyncData().customSyncData.zCount;\n        this.changeBigCubeSize(xCount, yCount, zCount);\n    }\n\n    private changeBigCubeSize(xCount: number, yCount: number, zCount: number) {\n        //先清空\n        this.cubeRootNode.removeAllChildren();\n\n        //创建xCount行yCount列zCount层的大正方体，并且以大正方体的中心点为原点\n        let cubeWidth = 1;\n        let cubeHeight = 1;\n        let cubeLength = 1;\n        let cubeDis = 0;\n        let cubeXDis = cubeWidth + cubeDis;\n        let cubeYDis = cubeHeight + cubeDis;\n        let cubeZDis = cubeLength + cubeDis;\n        let cubeXCount = xCount;\n        let cubeYCount = yCount;\n        let cubeZCount = zCount;\n        let cubeXTotalDis = cubeXCount * cubeXDis;\n        let cubeYTotalDis = cubeYCount * cubeYDis;\n        let cubeZTotalDis = cubeZCount * cubeZDis;\n        let cubeXStart = -cubeXTotalDis / 2 + cubeXDis / 2;\n        let cubeYStart = -cubeYTotalDis / 2 + cubeYDis / 2;\n        let cubeZStart = -cubeZTotalDis / 2 + cubeZDis / 2;\n        for (let i = 0; i < cubeXCount; i++) {\n            for (let j = 0; j < cubeYCount; j++) {\n                for (let k = 0; k < cubeZCount; k++) {\n                    let cubeNode = cc.instantiate(this.cubePrefab);\n                    cubeNode.parent = this.cubeRootNode;\n                    cubeNode.setPosition(cubeXStart + i * cubeXDis, cubeYStart + j * cubeYDis, cubeZStart + k * cubeZDis);\n                    cubeNode.getComponent(Cube).init(i, j, k);\n                }\n            }\n        }\n    }\n\n    private onCubeOpen(isOpen: boolean) {\n        if (isOpen) {\n            //将大正方体的按层分开一定距离\n            let cubeWidth = 1;\n            let cubeHeight = 1;\n            let cubeLength = 1;\n            let cubeDis = 0.8;\n            let cubeXDis = cubeWidth;\n            let cubeYDis = cubeHeight + cubeDis;\n            let cubeZDis = cubeLength;\n            let cubeXCount = SyncDataManager.getSyncData().customSyncData.xCount;\n            let cubeYCount = SyncDataManager.getSyncData().customSyncData.yCount;\n            let cubeZCount = SyncDataManager.getSyncData().customSyncData.zCount;\n            let cubeXTotalDis = cubeXCount * cubeXDis;\n            let cubeYTotalDis = cubeYCount * cubeYDis;\n            let cubeZTotalDis = cubeZCount * cubeZDis;\n            let cubeXStart = -cubeXTotalDis / 2 + cubeXDis / 2;\n            let cubeYStart = -cubeYTotalDis / 2 + cubeYDis / 2;\n            let cubeZStart = -cubeZTotalDis / 2 + cubeZDis / 2;\n            let openPosArr = [];\n            for (let i = 0; i < cubeXCount; i++) {\n                for (let j = 0; j < cubeYCount; j++) {\n                    for (let k = 0; k < cubeZCount; k++) {\n                        openPosArr.push({ x: cubeXStart + i * cubeXDis, y: cubeYStart + j * cubeYDis, z: cubeZStart + k * cubeZDis });\n                    }\n                }\n            }\n            for (let i = 0; i < this.cubeRootNode.children.length; i++) {\n                let cubeNode = this.cubeRootNode.children[i];\n                cubeNode.getComponent(Cube).handleOpen(openPosArr[i]);\n            }\n        } else {\n            for (let i = 0; i < this.cubeRootNode.children.length; i++) {\n                let cubeNode = this.cubeRootNode.children[i];\n                cubeNode.getComponent(Cube).handleClose();\n            }\n        }\n    }\n\n    private onClickCube(data: { xIndex: number, yIndex: number, zIndex: number }) {\n        for (let i = 0; i < this.cubeRootNode.children.length; i++) {\n            let cubeNode = this.cubeRootNode.children[i];\n            cubeNode.getComponent(Cube).handleCubeClick(data);\n        }\n    }\n}\n"]}