{"version":3,"sources":["assets\\game\\scripts\\Components\\ButtonSync.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\nimport { T2M } from '../../../frame/scripts/SDK/T2M';\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class ButtonSync extends cc.Component {\n    @property({ type: [cc.Component.EventHandler] })\n    private touchStartEvents: cc.Component.EventHandler[] = [];\n    @property({ type: [cc.Component.EventHandler] })\n    private touchEndEvents: cc.Component.EventHandler[] = [];\n    @property(cc.Boolean)\n    private isNeedScale: boolean = true;\n\n    private tagId: string;\n\n    onLoad() {\n        this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);\n        this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);\n        this.tagId = this.node.name + this.node.parent.name + this.node.getSiblingIndex();\n        this.addEventByT2M();\n    }\n\n    public addTouchEvent(target: cc.Node, component: string, handlers: string[]) {\n        this.touchStartEvents.push(new ButtonSync.EventHandler());\n        this.touchStartEvents[0].target = target;\n        this.touchStartEvents[0].component = component;\n        this.touchStartEvents[0].handler = handlers[0];\n\n        this.touchEndEvents.push(new ButtonSync.EventHandler());\n        this.touchEndEvents[0].target = target;\n        this.touchEndEvents[0].component = component;\n        this.touchEndEvents[0].handler = handlers[1];\n    }\n\n    private touchStart(event: cc.Event.EventTouch) {\n        let type = 'touchStart' + this.tagId;\n        T2M.dispatch(type, null);\n    }\n\n    private touchEnd(event: cc.Event.EventTouch) {\n        let type = 'touchEnd' + this.tagId;\n        T2M.dispatch(type, null);\n    }\n\n    private addEventByT2M() {\n        T2M.addSyncEventListener('touchStart' + this.tagId, this.touchStartHandler.bind(this));\n        T2M.addSyncEventListener('touchEnd' + this.tagId, this.touchEndHandler.bind(this));\n    }\n\n    private touchStartHandler(data) {\n        if (this.isNeedScale) {\n            this.node.scale = 1.1;\n        }        \n        for (let eventHandler of this.touchStartEvents) {\n            eventHandler.emit([{ target: this.node }]);\n        }\n    }\n\n    private touchEndHandler(data) {\n        if (this.isNeedScale) {\n            this.node.scale = 1;\n        }\n        for (let eventHandler of this.touchEndEvents) {\n            eventHandler.emit([{ target: this.node }]);\n        }\n    }\n}\n"]}